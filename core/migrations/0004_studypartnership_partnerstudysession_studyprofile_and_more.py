# Generated by Django 5.2.4 on 2025-09-10 19:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0003_goal_milestone_studysession_userstats_achievement_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StudyPartnership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('total_sessions', models.PositiveIntegerField(default=0)),
                ('last_session', models.DateTimeField(blank=True, null=True)),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partnerships_as_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partnerships_as_user2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user1', 'user2')},
            },
        ),
        migrations.CreateModel(
            name='PartnerStudySession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('subject', models.CharField(max_length=100)),
                ('scheduled_time', models.DateTimeField()),
                ('duration_hours', models.DecimalField(decimal_places=1, default=1.0, max_digits=3)),
                ('is_completed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, help_text='Session notes and outcomes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('partnership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='core.studypartnership')),
            ],
            options={
                'ordering': ['-scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='StudyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, help_text='Tell others about your study goals and interests', max_length=500)),
                ('subjects', models.CharField(help_text="Comma-separated subjects you're studying", max_length=500)),
                ('study_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], default='intermediate', max_length=20)),
                ('preferred_study_times', models.CharField(help_text='Comma-separated preferred times', max_length=100)),
                ('timezone', models.CharField(choices=[('UTC-12', 'UTC-12 (Baker Island)'), ('UTC-11', 'UTC-11 (American Samoa)'), ('UTC-10', 'UTC-10 (Hawaii)'), ('UTC-9', 'UTC-9 (Alaska)'), ('UTC-8', 'UTC-8 (PST)'), ('UTC-7', 'UTC-7 (MST)'), ('UTC-6', 'UTC-6 (CST)'), ('UTC-5', 'UTC-5 (EST)'), ('UTC-4', 'UTC-4 (AST)'), ('UTC-3', 'UTC-3 (Brazil)'), ('UTC-2', 'UTC-2 (Mid-Atlantic)'), ('UTC-1', 'UTC-1 (Azores)'), ('UTC+0', 'UTC+0 (GMT/London)'), ('UTC+1', 'UTC+1 (CET/Paris)'), ('UTC+2', 'UTC+2 (EET/Cairo)'), ('UTC+3', 'UTC+3 (Moscow)'), ('UTC+4', 'UTC+4 (Dubai)'), ('UTC+5', 'UTC+5 (Pakistan)'), ('UTC+5:30', 'UTC+5:30 (India)'), ('UTC+6', 'UTC+6 (Bangladesh)'), ('UTC+7', 'UTC+7 (Thailand)'), ('UTC+8', 'UTC+8 (China/Singapore)'), ('UTC+9', 'UTC+9 (Japan/Korea)'), ('UTC+10', 'UTC+10 (Australia East)'), ('UTC+11', 'UTC+11 (Solomon Islands)'), ('UTC+12', 'UTC+12 (New Zealand)')], default='UTC+0', max_length=10)),
                ('languages', models.CharField(default='English', help_text='Languages you can communicate in', max_length=200)),
                ('study_goals', models.TextField(blank=True, help_text='What are you trying to achieve?', max_length=300)),
                ('contact_preference', models.CharField(choices=[('platform', 'Through Platform Only'), ('email', 'Email'), ('discord', 'Discord'), ('zoom', 'Zoom')], default='platform', max_length=50)),
                ('contact_info', models.CharField(blank=True, help_text='Your contact information (optional)', max_length=100)),
                ('is_available', models.BooleanField(default=True, help_text='Are you currently looking for study partners?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='study_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudyPartnerRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text="Introduce yourself and explain why you'd like to study together", max_length=300)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('from_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to=settings.AUTH_USER_MODEL)),
                ('to_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('from_user', 'to_user')},
            },
        ),
    ]
